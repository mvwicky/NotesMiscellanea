# Makefile.nmake
# nmake file for Easy codec plugin
#

include ..\..\config.nmake
include ..\..\Makefile.nmake.inc

include moduleinfo.nmake

include Makefile.common

CFLAGS=$(WARNINGS_ARE_ERRORS) $(STANDARD_CFLAGS) \
	/I../.. $(GLIB_CFLAGS) \
	/I$(PCAP_DIR)\include

CPPFLAGS = $(CFLAGS) -TP

.c.obj::
	$(CC) $(CPPFLAGS) -Fd$(PLUGIN_NAME).pdb -c $<

LDFLAGS = $(PLUGIN_LDFLAGS)

!IFDEF ENABLE_LIBWIRESHARK
LINK_PLUGIN_WITH=..\..\epan\libwireshark.lib
CFLAGS=$(CFLAGS)

OBJECTS = $(C_FILES:.c=.obj) $(CPP_FILES:.cpp=.obj) plugin.obj

CODEC_LIBS = \
	EasyG729A/EasyG729A.lib \
	EasyG7231/EasyG7231.lib \
	EasyG722/EasyG722.lib

RESOURCE=$(PLUGIN_NAME).res

all: $(PLUGIN_NAME).dll

$(PLUGIN_NAME).rc : moduleinfo.nmake
	sed -e s/@PLUGIN_NAME@/$(PLUGIN_NAME)/ \
	-e s/@RC_MODULE_VERSION@/$(RC_MODULE_VERSION)/ \
	-e s/@RC_VERSION@/$(RC_VERSION)/ \
	-e s/@MODULE_VERSION@/$(MODULE_VERSION)/ \
	-e s/@PACKAGE@/$(PACKAGE)/ \
	-e s/@VERSION@/$(VERSION)/ \
	-e s/@MSVC_VARIANT@/$(MSVC_VARIANT)/ \
	< plugin.rc.in > $@

$(PLUGIN_NAME).dll $(PLUGIN_NAME).exp $(PLUGIN_NAME).lib : $(OBJECTS) $(LINK_PLUGIN_WITH) $(RESOURCE)
	link -dll /out:$(PLUGIN_NAME).dll $(LDFLAGS) $(OBJECTS) $(LINK_PLUGIN_WITH) \
	$(GLIB_LIBS) $(CODEC_LIBS) $(RESOURCE)

easy_codec_plugin.obj : easy_codec_plugin.c
	$(CC) $(CFLAGS) -Fd$(PLUGIN_NAME).pdb -c easy_codec_plugin.c

!ENDIF

clean:
	rm -f $(OBJECTS) $(RESOURCE) plugin.c *.nativecodeanalysis.xml *.pdb *.sbr \
	    $(PLUGIN_NAME).dll $(PLUGIN_NAME).dll.manifest $(PLUGIN_NAME).lib \
	    $(PLUGIN_NAME).exp $(PLUGIN_NAME).rc

#
# We remove the Flex-generated files with "distclean" because files
# generated by Flex need different #includes for UN*X and Windows (UN*X
# versions of Flex make it include <unistd.h>, but that's a UN*X-only
# header), so if you're going to build from source, you need to re-generate
# the files from the distribution that were generated by Flex.
#
distclean: clean
	rm -f $(FLEX_GENERATED_SRC_FILES) \
		$(FLEX_GENERATED_HEADER_FILES) \
		$(NODIST_GENERATED_SRC_FILES) \
		$(NODIST_GENERATED_HEADER_FILES)

maintainer-clean: distclean
	rm -f $(GENERATED_SRC_FILES) \
		$(GENERATED_HEADER_FILES)

checkapi:
	$(PERL) ../../tools/checkAPIs.pl -g abort -g termoutput -build \
		$(CLEAN_SRC_FILES) $(CLEAN_HEADER_FILES)
